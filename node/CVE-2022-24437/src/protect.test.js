const { test } = require("node:test");
const { throws, rejects } = require("node:assert");
const { runWithContext } = require("@aikidosec/firewall/agent/Context");

test("Zen Protects against Command Injection", async () => {
  process.env.AIKIDO_BLOCK = "true";
  process.env.AIKIDO_DEBUG = "true";

  require("@aikidosec/firewall");

  const gitPullOrClone = require("git-pull-or-clone");
  const repo = "file:///tmp/zero12345";
  const path = "--upload-pack=touch ./hacked.tmp";

  await runWithContext(
    {
      method: "GET",
      remoteAddress: "1.2.3.4",
      body: undefined,
      url: "/test",
      headers: {},
      routeParams: {},
      query: {
        path: path,
      },
      cookies: {},
      source: "test",
      route: "/test",
    },
    async () => {
      await rejects(
        new Promise((resolve, reject) => {
          gitPullOrClone(repo, path, (err) => {
            resolve();
          });
        }),

        {
          message:
            "Zen has blocked a shell injection: child_process.exec(...) originating from query.test",
        }
      );
    }
  );
});
