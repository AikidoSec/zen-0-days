const { test } = require("node:test");
const { equal } = require("node:assert");

test("Protects against JS Code Injection", async () => {
  process.env.AIKIDO_BLOCK = "true";
  process.env.AIKIDO_DEBUG = "true";
  require("@aikidosec/firewall");

  const { Hono } = require("hono");
  const { join } = require("node:path");
  const { readFile } = require("node:fs/promises");

  const app = new Hono();

  app.get("/insecure", async (c) => {
    try {
      const { filename } = c.req.query();

      // Join is not resolving relative paths correctly if they contain a Windows drive letter
      let textFile = join("documents", filename);

      const contents = await readFile(textFile, "utf-8");

      return c.json(contents);
    } catch (error) {
      return c.text(error.message, 500);
    }
  });

  const response = await app.request(
    "/insecure?filename=../C:/Windows/System32/cmd.exe"
  );

  equal(response.status, 500);
  equal(
    await response.text(),
    "Zen has blocked a path traversal attack: path.join(...) originating from query.filename"
  );
});
