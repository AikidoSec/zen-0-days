const { test } = require("node:test");
const { equal, throws, rejects } = require("node:assert");

test("Zen Node.js prevents SSRF", async () => {
  require("@aikidosec/firewall");
  const {
    runWithContext,
  } = require("./node_modules/@aikidosec/firewall/agent/Context");

  const axios = require("axios");
  const internalAPIClient = axios.create({
    baseURL: "https://httpbin.org",
    headers: {
      "X-API-KEY": "1234567890",
    },
  });

  const response = await internalAPIClient.get("/get");
  equal(response.status, 200); // Normal request is successful

  const userInput = "/127.0.0.1:8080";

  // This is done automatically by Zen for supported web frameworks (this is just a test)
  await runWithContext(
    {
      method: "GET",
      remoteAddress: "1.2.3.4",
      body: undefined,
      url: "/test",
      headers: {},
      routeParams: {},
      query: {
        profilePicture: userInput,
      },
      cookies: {},
      source: "test",
      route: "/test",
    },
    async () => {
      await rejects(internalAPIClient.get(`/${userInput}`), {
        message:
          "Zen has blocked a server-side request forgery: http.request(...) originating from query.profilePicture",
      });
    }
  );
});
